---
- name: Ensuring config directory exists
  file:
    path: "{{ node_config_directory }}/{{ item }}"
    state: "directory"
  with_items:
    - "cinder-volume"
    - "cinder-backup"
  when: inventory_hostname in groups['cinder-volume']

- name: Copying over config(s)
  template:
    src: roles/ceph/templates/ceph.conf.j2
    dest: "{{ node_config_directory }}/{{ item }}/ceph.conf"
  with_items:
    - "cinder-volume"
    - "cinder-backup"
  when: inventory_hostname in groups['cinder-volume']

- include: ../../ceph_pools.yml
  vars:
    pool_name: "{{ cinder_pool_name }}"
    pool_type: "{{ cinder_pool_type }}"
    cache_mode: "{{ cinder_cache_mode }}"

- include: ../../ceph_pools.yml
  vars:
    pool_name: "{{ cinder_backup_pool_name }}"
    pool_type: "{{ cinder_backup_pool_type }}"
    cache_mode: "{{ cinder_backup_cache_mode }}"

# TODO(SamYaple): Improve changed_when tests
- name: Pulling cephx keyring for cinder
  command: docker exec ceph_mon ceph auth get-or-create client.cinder mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ ceph_cinder_pool_name }}, allow rwx pool={{ ceph_cinder_pool_name }}-cache, allow rwx pool={{ ceph_nova_pool_name }}, allow rwx pool={{ ceph_nova_pool_name }}-cache, allow rx pool={{ ceph_glance_pool_name }}, allow rx pool={{ ceph_glance_pool_name }}-cache'
  register: cephx_key_cinder
  delegate_to: "{{ groups['ceph-mon'][0] }}"
  changed_when: False
  run_once: True

# TODO(SamYaple): Improve changed_when tests
- name: Pulling cephx keyring for cinder-backup
  command: docker exec ceph_mon ceph auth get-or-create client.cinder-backup mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ ceph_cinder_backup_pool_name }}, allow rwx pool={{ ceph_cinder_backup_pool_name }}-cache'
  register: cephx_key_cinder_backup
  delegate_to: "{{ groups['ceph-mon'][0] }}"
  changed_when: False
  run_once: True

- name: Pushing cephx keyring
  copy:
    content: "{{ item.content }}\n\r"
    dest: "{{ node_config_directory }}/{{ item.service_name }}/ceph.client.{{ item.key_name }}.keyring"
    mode: "0600"
  with_items:
    - { service_name: "cinder-volume", key_name: "cinder", content: "{{ cephx_key_cinder.stdout }}" }
    - { service_name: "cinder-backup", key_name: "cinder", content: "{{ cephx_key_cinder.stdout }}" }
    - { service_name: "cinder-backup", key_name: "cinder-backup", content: "{{ cephx_key_cinder_backup.stdout }}" }
    - { service_name: "cinder-volume", key_name: "cinder-backup", content: "{{ cephx_key_cinder_backup.stdout }}" }

  when: inventory_hostname in groups['cinder-volume']


- name: Extract key from file
  local_action: shell cat {{ node_config_directory }}/cinder-volume/ceph.client.cinder.keyring| grep -E 'key\s*=' | awk '{ print $3 }'
  register: cephx_cinder_volume_raw_key

- name: Pushing secrets xml for libvirt
  template:
    src: "secret_cinder_volume.xml.j2"
    dest: "{{ node_config_directory }}/nova-libvirt/secrets/secret-volumes.xml"
    mode: "0600"
  when: inventory_hostname in groups['compute']

- name: Pushing secrets key for libvirt
  copy:
    content: "{{ cephx_cinder_volume_raw_key.stdout }}"
    dest: "{{ node_config_directory }}/nova-libvirt/secrets/secret-volumes.base64"
    mode: "0600"
  when: inventory_hostname in groups['compute']

- name: Extract key from file
  local_action: shell cat {{ node_config_directory }}/cinder-backup/ceph.client.cinder-backup.keyring| grep -E 'key\s*=' | awk '{ print $3 }'
  register: cephx_cinder_backup_raw_key

- name: Pushing secrets xml for libvirt
  template:
    src: "secret_cinder_backup.xml.j2"
    dest: "{{ node_config_directory }}/nova-libvirt/secrets/secret_cinder_backup.xml"
    mode: "0600"
  when: inventory_hostname in groups['compute']

- name: Pushing secrets key for libvirt
  copy:
    content: "{{ cephx_cinder_backup_raw_key.stdout }}"
    dest: "{{ node_config_directory }}/nova-libvirt/secrets/secret_cinder_backup.base64"
    mode: "0600"
  when: inventory_hostname in groups['compute']
